
方法的重写规则

1）参数列表必须完全与被重写方法的相同；

2）返回类型可以不同；（备注:这条信息是标准的重写方法的规则,但是在java 1.5 版本之前返回类型必须一样,1.5(包含)j 版本之后ava放宽了限制,返回类型必须小于或者等于父类方法的返回类型 ）。才有了子类返回类型小于等于父类方法返回类型。在java里面这个怎么样都是正确的,请小伙伴谨记。

3）访问权限不能比父类中被重写的方法的访问权限更低。例如：如果父类的一个方法被声明为public，那么在子类中重写该方法就不能声明为protected。

4）父类的成员方法只能被它的子类重写。

5）声明为final的方法不能被重写。

6）声明为static的方法不能被重写，但是能够被再次声明。

7）子类和父类在同一个包中，那么子类可以重写父类所有方法，除了声明为private和final的方法。

8）子类和父类不在同一个包中，那么子类只能够重写父类的声明为public和protected的非final方法。

9）重写的方法能够抛出任何非强制异常，无论被重写的方法是否抛出异常。但是，重写的方法不能抛出新的强制性异常，或者比被重写方法声明的更广泛的强制性异常，反之则可以。

10）构造方法不能被重写。

11）如果不能继承一个方法，则不能重写这个方法。

重载：

规则：重载是在同一个类中
被重载的方法必须改变参数列表(参数个数或类型或顺序不一样)；
被重载的方法可以改变返回类型；
被重载的方法可以改变访问修饰符；
被重载的方法可以声明新的或更广的检查异常；
方法能够在同一个类中或者在一个子类中被重载。
无法以返回值类型作为重载函数的区分标准。
