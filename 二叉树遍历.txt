一、二叉树定义
完全二叉树：
1. 若设二叉树的深度为h，除第 h 层外，其它各层 (1～h-1) 的结点数都达到最大个数，第 h 层所有的结点都连续集中在最左边，这就是完全二叉树。
2. 一棵二叉树至多只有最下面的一层上的结点的度数可以小于2，并且最下层上的结点都集中在该层最左边的若干位置上，则此二叉树成为完全二叉树。
3. 完全二叉树是由满二叉树而引出来的。对于深度为K的，有n个结点的二叉树，当且仅当其每一个结点都与深度为K的满二叉树中编号从1至n的结点一一对应时称之为完全二叉树。

满二叉树：
所有终端都在同一层次，且非终端结点的度数为2。

二、二叉树的遍历

遍历即将树的所有结点访问且仅访问一次。
按照根节点位置的不同分为前序遍历，中序遍历，后序遍历。
前序遍历：根节点->左子树->右子树
中序遍历：左子树->根节点->右子树
后序遍历：左子树->右子树->根节点

三、二叉搜索树（Binary Search Tree）

二叉查找树是指一颗空树或者具有下列性质的二叉树:
1.任意节点的左子树不空，则左子树上所有的结点的值均小于它的根结点的值；
2.任意节点的右子树不空，则右子树所有的结点的值均大于它的根节点的值；
3.任意结点的左、右子树也分别为二叉查找树；
4.没有键值相等的节点。

